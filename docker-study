Docker 是什么?它有什么作用?为什么身边的程序员都在谈论这个新兴的开源项目?

Docker是轻量级容器管理引擎,它的出现为软件开发和云计算平台之间建立了桥梁.
Docker将成为互联网应用开发领域最重要的平台级技术和标准

Docker的核心价值在于,它很可能改变传统软件"交付"方式和"运行"方式.传统的交付源码或交付软件包的方式最大的问题在于,软件运行期间所"依赖的环境"是无法控制,不能标准化的.IT人员常常需要耗费很多精力来解决因"依赖的环境"而导致软件运行出现的各种问题.

Docker将软件与其"依赖的环境"打包zain一起,以镜像的方式交付,让软件运行在"标准环境"中,这非常复合云计算的要求.

Docker也可以被称为轻量级虚拟化技术

Docker是可移植(或者说跨平台的),可以做到(构建一次,在各平台上运行) Build once ,run anywhere.


Docker是一个能够把开发的应用程序自动部署到容器的开源引擎.由Docker公司团队编写,基于Apache2.0开源授权协议发行.


	1.2 Docker组件
	
核心组件:
	
	Docker客户端和服务器
		Docker是一个客户-服务器(C/S)架构程序.Docker客户端只需向Docker服务器或守护进程发出请求;服务器或守护进程将完成所有工作并返回结果.Docker提供了一个命令行工具以及一整套RESTful API.
	
	Docker镜像

		镜像是构建Docker世界的基石.用户基于镜像来运行自己的容器.镜像也是Docker生命周期中的"构建"部分.镜像是基于联合(Union)文件系统的一种层式单位结构.由一系列指令一步一步构建出来.  也可以把镜像当作容器的"源代码".镜像的体积非常小,非常"便携",易于分享 存储和更新

	Registry
		Docker用Registry来保存用户构建的镜像.Registry分为共有和私有两种.Docker公式运营的公共Registry叫做Docker Hub .用户可以在Docker Hub注册帐号,分享并保存自己的镜像.

	Docker容器
		Docker可以帮你构建和部署容器.只需要把自己的应用程序或服务打包放进容器即可.容器是基于镜像启动起来的,容器中金额以运行一个或多个进程.我们可以认为,镜像是Docker生命周期中的构建或打包阶段,而容器则是启动或执行阶段 总结起来 Docker容器就是:
一个镜像格式:
一系列标准的操作;
一个执行环境









